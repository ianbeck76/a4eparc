@using MvcContrib.UI.Pager
@using MvcContrib.UI.Grid;
@model A4EPARC.ViewModels.ClientResultListViewModel
@using A4EPARC.Services

@{
    ViewBag.Title = "Results";
}
@section scripts
{
    <script type="text/javascript">
        $('.input-group.date').datepicker({
            format: 'dd-mm-yyyy'
        });
    </script>
}

<div class="container" id="resultsgrid">

    <h2 class="divider" id="ClientResultsLabel">@LabelService.Get("ClientResultsLabel", "Client Results", Model.SiteLabels, 1) Client Results</h2>

    <form action="" id="filterForm" method="get"></form>
    <form class="form-horizontal" role="form">
        <div class="row">
            <div class="col-xs-6 col-sm-6 col-md-3">
                <label id="DateFromLabel">@LabelService.Get("DateFromLabel", "Date From", Model.SiteLabels, 1)</label>
                <div class="input-group date" data-date-autoclose="true" data-date-format="mm-dd-yyyy">
                    <input type="text" name="datefrom" id="datefrominput" class="form-control " value="@Model.DateFrom" />
                    <span class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </span>
                </div>
            </div>
            <div class="col-xs-6 col-sm-6 col-md-3">
                <label id="DateToLabel">@LabelService.Get("DateToLabel", "Date To  ", Model.SiteLabels, 1)</label>
                <div class="input-group date" data-date-autoclose="true" data-date-format="mm-dd-yyyy">
                    <input type="text" name="dateto" id="datetoinput" class="form-control " value="@Model.DateTo" />
                    <span class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </span>
                </div>
            </div>
            <div class="col-xs-6 col-sm-6 col-md-3">
                <label id="UsernameLabel">@LabelService.Get("UsernameLabel", "Username", Model.SiteLabels, 1)</label>
                <input type="text" name="username" id="usernameinput" class="form-control col-xs-3" value="@Model.Username" />
            </div>     
            @if (Context.User.IsInRole("IsSuperAdmin"))
            {
                <div class="col-xs-6 col-sm-6 col-md-3">
                    @Html.Label("Company")
                    @Html.DropDownListFor(m => m.Company, new SelectList(Model.Companies), "Please Select", new { @class = "form-control", @id = "companyinput", @name = "company" })
                </div>
            }
            else
            {
                <input type="hidden" value="@Model.Company" id="companyinput" name="company" />
            }
            <input type="hidden" value="@Model.JobSeekerID" id="jobseekeridinput" name="JobSeekerID" />
            <input type="hidden" value="@Model.Surname" id="surnameinput" name="Surname" />
        </div>
    </form>
    <br />

    <button class="btn btn-primary" title="Search" id="filterLink" name="filterLink" value="Search">@LabelService.Get("filterLink", "Search", Model.SiteLabels, 1) <span class="glyphicon glyphicon-search"></span></button>
    &nbsp;&nbsp;
    <button class="btn btn-primary" title="Excel" id="export" name="export" value="Excel">Excel <span class="glyphicon glyphicon-download-alt"></span></button>
    &nbsp;&nbsp;
    <button class="btn btn-secondary" title="Clear" id="resrefresh" name="resrefresh" value="Clear">@LabelService.Get("resrefresh", "Clear Filters", Model.SiteLabels, 1) <span class="glyphicon glyphicon-refresh"></span></button>

    <br />
    <div class="row">
        <br />
        @if (Model.Results.Any())
        {
            var companyId = A4EPARC.Services.AuthenticationService.GetCompanyId();

            @Html.Grid(Model.Results).Columns(column =>
{
    column.For(a => a.CreatedDate).Named("Created Date").Sortable(false);
    column.For(a => a.ActionName).Named("Action").Sortable(false);
    column.For(a => a.AnswerString).Named("Answer String").Sortable(false);
    column.For(a => a.Username).Named(LabelService.Get("UsernameLabel", "Username", Model.SiteLabels, 1)).Sortable(false);
    if (Context.User.IsInRole("IsSuperAdmin"))
    {
        column.For(a => a.Deleted.GetValueOrDefault() ? "<a href='' id='" + @a.Id + "' value='" + @a.Id + "' class='active icon icon-cross' title='Inactive - click to include in excel results'></a>"
            : "<a href=\"\" id='" + @a.Id + "' value='" + @a.Id + "' class='active icon icon-tick' title='Active - click to remove from excel results'></a>").Encode(false).Named("Active").Sortable(false);
    }
    if (@companyId == 11 || @companyId == 13)
    {
        column.For(a => "<a href='" + @Url.Action("DetailsGls", "Results", new { Area = "", id = a.Id }) + "' class='icon icon-edit' title='Display'></a>").Encode(false).Sortable(false);
    }
    else
    {
        column.For(a => "<a href='" + @Url.Action("Details", "Results", new { Area = "", id = a.Id }) + "' class='icon icon-edit' title='Display'></a>").Encode(false).Sortable(false);
    }
}).Sort(Model.GridSortOptions).Attributes(@width => "100%", @class => "table table-striped table-bordered table-hover")

            @Html.Raw(Html.Pager(Model.Results).First(LabelService.Get("First", "First", Model.SiteLabels, 1)).Last(LabelService.Get("Last", "Last", Model.SiteLabels, 1)).Next(LabelService.Get("Next", "Next", Model.SiteLabels, 1)).Previous(LabelService.Get("Previous", "Previous", Model.SiteLabels, 1)).QueryParam("page").ToString())
        }

    </div>

</div>