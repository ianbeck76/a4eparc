@model A4EPARC.ViewModels.PagedViewModel<A4EPARC.ViewModels.WebServiceResultsViewModel>
@using MvcContrib.UI.Pager
@using MvcContrib.UI.Grid;

 <div class="container">
        
        <h2 class="divider">WebService Results</h2>

@using (Html.BeginForm("Index", "WebServiceResults"))
{   
       <form class="form-horizontal" role="form">
            <div class="row">
                <div class="col-xs-4">
                    @Html.Label("Date From")
                    @Html.TextBox("datefrom", "MM/DD/YYYY", new { @class = "form-control datepicker" })
                </div>
                <div class="col-xs-4">
                @Html.Label("Date To  ")
                @Html.TextBox("dateto", "MM/DD/YYYY", new { @class = "form-control datepicker" })
                </div>
                <div class="col-xs-4">
                @Html.Label("Job Seeker ID")
                @Html.TextBox("JobSeekerID","", new { @class = "form-control" })
                </div>
            </div>
        </form>
    <br/>@*
    <div class="row">
        <div class="col-md-1">
            <input type="submit" value="Clear" class="btn btn-primary" id="clear" />
        </div>
        <div class="col-md-1 col-md-offset-1">
            <input type="submit" value="Search" class="btn btn-primary" id="search" />
        </div>
        <div class="col-md-1 col-md-offset-8">
            <input type="submit" value="Print " class="btn btn-primary" id="print" />
        </div>
    </div>*@
        <input class="btn btn-secondary" type="button" value="Reset" onclick="window.location = '';" />
        <input class="btn btn-primary" type="submit" id="filterLink" name="filterLink" value="Search" />
        <input class="btn btn-primary" type="submit" id="print" name="print" value="Print" />
    
    <br/>
}
         <br/>
      <div class="row">
        


@if (Model.Query.Any())
{
	@Html.Grid(Model.PagedList).AutoGenerateColumns().Columns(column =>
{
    column.For(a => "<a href='" + @Url.Action("Index", "Home", new { reportId = a.Id }) + "' class='icon icon-edit' title='Display'></a>").Encode(false);
    column.For(a => "<a href='" + @Url.Action("Index", "Home", new { id = a.Id }) + "' class='icon icon-print' title='Print'></a>").Encode(false);
    column.For(a => "<a href='" + @Url.Action("Index", "Home", new { reportId = a.Id }) + "' class='icon icon-delete' title='Delete'></a>").Encode(false);
}).Sort(Model.GridSortOptions).Attributes(@width => "100%", @class => "table table-striped table-bordered table-hover")
	
	<br />

	 @Html.Raw(Html.Pager(Model.PagedList).First("First").Last("Last").Next("Next").Previous("Previous").QueryParam("page").ToString())        
}
        
      </div>

 </div>